{"ast":null,"code":"var _jsxFileName = \"/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData() {\n  const res = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\");\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n  return res.json();\n}\nexport async function fetchData() {\n  const data = await getData();\n  const normalized = normalize(data);\n  return {\n    normalized: normalized.name\n  };\n}\nconst test = fetchData();\nfunction App() {\n  _s();\n  const [data, setData] = React.useState({});\n  React.useEffect(() => {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\").then(response => response.json()).then(res => normalize(res)).then(data => setData(data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), Object.keys(data).length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","normalize","jsxDEV","_jsxDEV","getData","res","fetch","ok","Error","json","fetchData","data","normalized","name","test","App","_s","setData","useState","useEffect","then","response","catch","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","_c","$RefreshReg$"],"sources":["/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\n\nasync function getData() {\n  const res = await fetch(\n    \"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\"\n  );\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n\n  return res.json();\n}\n\nexport async function fetchData() {\n  const data = await getData();\n\n  const normalized = normalize(data);\n\n  return { normalized: normalized.name };\n}\n\nconst test = fetchData();\n\nfunction App() {\n  const [data, setData] = React.useState({});\n\n  React.useEffect(() => {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\"\n    )\n      .then((response) => response.json())\n      .then((res) => normalize(res))\n      .then((data) => setData(data))\n      .catch((error) => console.error(error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {Object.keys(data).length ? <p>{data.name}</p> : null}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAeC,OAAOA,CAAA,EAAG;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,kGACF,CAAC;EACD;EACA;;EAEA,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;IACX;IACA,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAAC,CAAC;EAE5B,MAAMQ,UAAU,GAAGX,SAAS,CAACU,IAAI,CAAC;EAElC,OAAO;IAAEC,UAAU,EAAEA,UAAU,CAACC;EAAK,CAAC;AACxC;AAEA,MAAMC,IAAI,GAAGJ,SAAS,CAAC,CAAC;AAExB,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CnB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpBb,KAAK,CACH,kGACF,CAAC,CACEc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACZ,IAAI,CAAC,CAAC,CAAC,CACnCW,IAAI,CAAEf,GAAG,IAAKJ,SAAS,CAACI,GAAG,CAAC,CAAC,CAC7Be,IAAI,CAAET,IAAI,IAAKM,OAAO,CAACN,IAAI,CAAC,CAAC,CAC7BW,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvB,OAAA;QAAKwB,GAAG,EAAE3B,IAAK;QAACyB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjDC,MAAM,CAACC,IAAI,CAACvB,IAAI,CAAC,CAACwB,MAAM,gBAAGhC,OAAA;QAAAuB,QAAA,EAAIf,IAAI,CAACE;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAAG,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CArBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}