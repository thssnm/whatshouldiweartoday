{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nexport const useLocation = () => {\n  _s();\n  const [userLocation, setUserLocation] = React.useState(\"Cologne\");\n\n  // define the function that finds the users geolocation\n  const getUserLocation = () => {\n    // if geolocation is supported by the users browser\n    if (navigator.geolocation) {\n      // get the current users location\n      navigator.geolocation.getCurrentPosition(position => {\n        // save the geolocation coordinates in two variables\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        // update the value of userlocation variable\n        setUserLocation(old => {\n          console.log(old);\n          return {\n            latitude,\n            longitude\n          };\n        });\n      },\n      // if there was an error getting the users location\n      error => {\n        console.error(\"Error getting user location:\", error);\n      }, {\n        enableHighAccuracy: true\n      });\n    }\n    // if geolocation is not supported by the users browser\n    else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  return {\n    getUserLocation,\n    userLocation\n  };\n};\n_s(useLocation, \"FJqfz+uVK5mbvdZPSgs8bqLjOR4=\");","map":{"version":3,"names":["React","useLocation","_s","userLocation","setUserLocation","useState","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","old","console","log","error","enableHighAccuracy"],"sources":["/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/git/whatshouldiweartoday/src/hooks/useLocation.ts"],"sourcesContent":["import React from \"react\";\n\nexport const useLocation = () => {\n  const [userLocation, setUserLocation] = React.useState<\n    { latitude: number; longitude: number } | string\n  >(\"Cologne\");\n\n  // define the function that finds the users geolocation\n  const getUserLocation = () => {\n    // if geolocation is supported by the users browser\n    if (navigator.geolocation) {\n      // get the current users location\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          // save the geolocation coordinates in two variables\n          const { latitude, longitude } = position.coords;\n          // update the value of userlocation variable\n          setUserLocation((old) => {\n            console.log(old);\n            return { latitude, longitude };\n          });\n        },\n        // if there was an error getting the users location\n        (error) => {\n          console.error(\"Error getting user location:\", error);\n        },\n        { enableHighAccuracy: true }\n      );\n    }\n    // if geolocation is not supported by the users browser\n    else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  return {\n    getUserLocation,\n    userLocation,\n  };\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAEpD,SAAS,CAAC;;EAEZ;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzB;MACAD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ;QACA,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/C;QACAT,eAAe,CAAEU,GAAG,IAAK;UACvBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChB,OAAO;YAAEH,QAAQ;YAAEC;UAAU,CAAC;QAChC,CAAC,CAAC;MACJ,CAAC;MACD;MACCK,KAAK,IAAK;QACTF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,EACD;QAAEC,kBAAkB,EAAE;MAAK,CAC7B,CAAC;IACH;IACA;IAAA,KACK;MACHH,OAAO,CAACE,KAAK,CAAC,+CAA+C,CAAC;IAChE;EACF,CAAC;EAED,OAAO;IACLX,eAAe;IACfH;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CArCWD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}