{"ast":null,"code":"var _jsxFileName = \"/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData() {\n  const res = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\");\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n  return res.json();\n}\nexport async function fetchData() {\n  const data = await getData();\n  const normalized = normalize(data);\n  console.log(\"data:\", normalized);\n  return {\n    normalized: normalized.name\n  };\n}\nconst test = fetchData();\nfunction App() {\n  _s();\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\").then(response => {\n      console.log(\"res:\", response.json());\n      return response.json();\n    }).then(data => setData(data)).catch(error => console.error(error));\n  }, []);\n  const weather = data;\n  console.log(\"weather:\", weather, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","normalize","jsxDEV","_jsxDEV","getData","res","fetch","ok","Error","json","fetchData","data","normalized","console","log","name","test","App","_s","setData","useState","useEffect","then","response","catch","error","weather","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\n\nasync function getData() {\n  const res = await fetch(\n    \"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\"\n  );\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n\n  return res.json();\n}\n\nexport async function fetchData() {\n  const data = await getData();\n\n  const normalized = normalize(data);\n\n  console.log(\"data:\", normalized);\n\n  return { normalized: normalized.name };\n}\n\nconst test = fetchData();\n\nfunction App() {\n  const [data, setData] = React.useState();\n\n  React.useEffect(() => {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\"\n    )\n      .then((response) => {\n        console.log(\"res:\", response.json());\n        return response.json();\n      })\n      .then((data) => setData(data))\n      .catch((error) => console.error(error));\n  }, []);\n  const weather = data;\n\n  console.log(\"weather:\", weather, data);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAeC,OAAOA,CAAA,EAAG;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,kGACF,CAAC;EACD;EACA;;EAEA,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;IACX;IACA,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAAC,CAAC;EAE5B,MAAMQ,UAAU,GAAGX,SAAS,CAACU,IAAI,CAAC;EAElCE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,UAAU,CAAC;EAEhC,OAAO;IAAEA,UAAU,EAAEA,UAAU,CAACG;EAAK,CAAC;AACxC;AAEA,MAAMC,IAAI,GAAGN,SAAS,CAAC,CAAC;AAExB,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,CAAC;EAExCrB,KAAK,CAACsB,SAAS,CAAC,MAAM;IACpBf,KAAK,CACH,kGACF,CAAC,CACEgB,IAAI,CAAEC,QAAQ,IAAK;MAClBV,OAAO,CAACC,GAAG,CAAC,MAAM,EAAES,QAAQ,CAACd,IAAI,CAAC,CAAC,CAAC;MACpC,OAAOc,QAAQ,CAACd,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDa,IAAI,CAAEX,IAAI,IAAKQ,OAAO,CAACR,IAAI,CAAC,CAAC,CAC7Ba,KAAK,CAAEC,KAAK,IAAKZ,OAAO,CAACY,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,OAAO,GAAGf,IAAI;EAEpBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEY,OAAO,EAAEf,IAAI,CAAC;EACtC,oBACER,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBzB,OAAA;MAAQwB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BzB,OAAA;QAAK0B,GAAG,EAAE7B,IAAK;QAAC2B,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAzBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}