{"ast":null,"code":"var _jsxFileName = \"/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData() {\n  const res = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\");\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n  return res.json();\n}\nexport async function fetchData() {\n  const data = await getData();\n  const normalized = normalize(data);\n  console.log(\"data:\", normalized);\n  return normalized;\n}\nfunction App() {\n  const weather = fetchData().then(response => {\n    console.log(\"reponse:\", response);\n    return response;\n  });\n  console.log(\"weather:\", weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","normalize","jsxDEV","_jsxDEV","getData","res","fetch","ok","Error","json","fetchData","data","normalized","console","log","App","weather","then","response","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/matthiastheissen/Desktop/Privat/WhatShouldIWearTodayPwa/what-should-i-wear-today/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { normalize } from \"./hooks/normalize\";\n\nasync function getData() {\n  const res = await fetch(\n    \"https://api.openweathermap.org/data/2.5/weather?q=cologne&appid=cf61ba7bba440089d7c442c97d356595\"\n  );\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error(\"Failed to fetch data\");\n  }\n\n  return res.json();\n}\n\nexport async function fetchData() {\n  const data = await getData();\n\n  const normalized = normalize(data);\n\n  console.log(\"data:\", normalized);\n\n  return normalized;\n}\n\nfunction App() {\n  const weather = fetchData().then((response) => {\n    console.log(\"reponse:\", response);\n    return response;\n  });\n\n  console.log(\"weather:\", weather);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{weather.name}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAeC,OAAOA,CAAA,EAAG;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,kGACF,CAAC;EACD;EACA;;EAEA,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;IACX;IACA,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAAC,CAAC;EAE5B,MAAMQ,UAAU,GAAGX,SAAS,CAACU,IAAI,CAAC;EAElCE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,UAAU,CAAC;EAEhC,OAAOA,UAAU;AACnB;AAEA,SAASG,GAAGA,CAAA,EAAG;EACb,MAAMC,OAAO,GAAGN,SAAS,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;IAC7CL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEI,QAAQ,CAAC;IACjC,OAAOA,QAAQ;EACjB,CAAC,CAAC;EAEFL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,OAAO,CAAC;EAChC,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BjB,OAAA;QAAKkB,GAAG,EAAErB,IAAK;QAACmB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDvB,OAAA;QAAAiB,QAAA,EAAIJ,OAAO,CAACW;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GAfQb,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}